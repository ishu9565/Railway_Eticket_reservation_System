//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWebApp.TrainServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Train", Namespace="http://schemas.datacontract.org/2004/07/RailwayE_TicketReservationSystem")]
    [System.SerializableAttribute()]
    public partial class Train : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int availabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime cretedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string isActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid trainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int trainNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string trainTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int availability {
            get {
                return this.availabilityField;
            }
            set {
                if ((this.availabilityField.Equals(value) != true)) {
                    this.availabilityField = value;
                    this.RaisePropertyChanged("availability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime cretedAt {
            get {
                return this.cretedAtField;
            }
            set {
                if ((this.cretedAtField.Equals(value) != true)) {
                    this.cretedAtField = value;
                    this.RaisePropertyChanged("cretedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isActive {
            get {
                return this.isActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.isActiveField, value) != true)) {
                    this.isActiveField = value;
                    this.RaisePropertyChanged("isActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid trainId {
            get {
                return this.trainIdField;
            }
            set {
                if ((this.trainIdField.Equals(value) != true)) {
                    this.trainIdField = value;
                    this.RaisePropertyChanged("trainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int trainNo {
            get {
                return this.trainNoField;
            }
            set {
                if ((this.trainNoField.Equals(value) != true)) {
                    this.trainNoField = value;
                    this.RaisePropertyChanged("trainNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string trainType {
            get {
                return this.trainTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.trainTypeField, value) != true)) {
                    this.trainTypeField = value;
                    this.RaisePropertyChanged("trainType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TrainServiceReference.ITrain")]
    public interface ITrain {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrain/AddTrain", ReplyAction="http://tempuri.org/ITrain/AddTrainResponse")]
        bool AddTrain(ClientWebApp.TrainServiceReference.Train train);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrain/AddTrain", ReplyAction="http://tempuri.org/ITrain/AddTrainResponse")]
        System.Threading.Tasks.Task<bool> AddTrainAsync(ClientWebApp.TrainServiceReference.Train train);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrain/DeactiveTrain", ReplyAction="http://tempuri.org/ITrain/DeactiveTrainResponse")]
        bool DeactiveTrain(System.Guid trainId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrain/DeactiveTrain", ReplyAction="http://tempuri.org/ITrain/DeactiveTrainResponse")]
        System.Threading.Tasks.Task<bool> DeactiveTrainAsync(System.Guid trainId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrain/UpdateAvailability", ReplyAction="http://tempuri.org/ITrain/UpdateAvailabilityResponse")]
        bool UpdateAvailability(System.Guid trainId, int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrain/UpdateAvailability", ReplyAction="http://tempuri.org/ITrain/UpdateAvailabilityResponse")]
        System.Threading.Tasks.Task<bool> UpdateAvailabilityAsync(System.Guid trainId, int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrain/GetTrains", ReplyAction="http://tempuri.org/ITrain/GetTrainsResponse")]
        ClientWebApp.TrainServiceReference.Train[] GetTrains();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrain/GetTrains", ReplyAction="http://tempuri.org/ITrain/GetTrainsResponse")]
        System.Threading.Tasks.Task<ClientWebApp.TrainServiceReference.Train[]> GetTrainsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrainChannel : ClientWebApp.TrainServiceReference.ITrain, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrainClient : System.ServiceModel.ClientBase<ClientWebApp.TrainServiceReference.ITrain>, ClientWebApp.TrainServiceReference.ITrain {
        
        public TrainClient() {
        }
        
        public TrainClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrainClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrainClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrainClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddTrain(ClientWebApp.TrainServiceReference.Train train) {
            return base.Channel.AddTrain(train);
        }
        
        public System.Threading.Tasks.Task<bool> AddTrainAsync(ClientWebApp.TrainServiceReference.Train train) {
            return base.Channel.AddTrainAsync(train);
        }
        
        public bool DeactiveTrain(System.Guid trainId) {
            return base.Channel.DeactiveTrain(trainId);
        }
        
        public System.Threading.Tasks.Task<bool> DeactiveTrainAsync(System.Guid trainId) {
            return base.Channel.DeactiveTrainAsync(trainId);
        }
        
        public bool UpdateAvailability(System.Guid trainId, int n) {
            return base.Channel.UpdateAvailability(trainId, n);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAvailabilityAsync(System.Guid trainId, int n) {
            return base.Channel.UpdateAvailabilityAsync(trainId, n);
        }
        
        public ClientWebApp.TrainServiceReference.Train[] GetTrains() {
            return base.Channel.GetTrains();
        }
        
        public System.Threading.Tasks.Task<ClientWebApp.TrainServiceReference.Train[]> GetTrainsAsync() {
            return base.Channel.GetTrainsAsync();
        }
    }
}
